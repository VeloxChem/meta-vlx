name: Deploy C++ packages

on:
  workflow_dispatch:
    inputs:
      recipe:
        description: 'Which recipe to build'
        required: true
      url:
        description: 'The URL of the tarball to download'
        required: true
      sha256:
        description: 'The SHA256 of the tarball'
        required: true
      version:
        description: 'Version of the conda package'
        required: true
      build:
        description: 'Build number of the conda package'
        required: true
      channel:
        description: 'The anaconda.org channel'
        required: true
      label:
        description: 'Label of the conda package'
        required: true
      patch:
        description: 'Patch to apply'
        required: true

concurrency: 
  group: latest-deploy-group
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    name: Deploy to Anaconda.org
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        mpi: [msmpi, mpich, openmpi]
        python: [3.6, 3.7, 3.8, 3.9]
        exclude:
          - os: macos-latest
            mpi: msmpi
          - os: ubuntu-latest
            mpi: msmpi
          - os: windows-latest
            mpi: mpich
          - os: windows-latest
            mpi: openmpi

    steps:
      - uses: actions/checkout@v2

      - name: Build summary
        run: |
          echo "Build triggered with the following parameters"

          echo " > Recipe for package: ${{ github.event.inputs.recipe }}"
          echo " > Conda package version: ${{ github.event.inputs.version }}"
          echo " > Conda package channel: ${{ github.event.inputs.channel }}"
          echo " > Conda package label: ${{ github.event.inputs.label }}"
          echo " > OS, Python version, MPI implementation: ${{ matrix.os }}, ${{ matrix.python }}, ${{ matrix.mpi }}"

      - name: Get tarball from GitLab, verify sha256 checksum, and unpack it
        env:
          GITLAB_PAT: ${{ secrets.GITLAB_PAT }}
        run: |
          # write checksum to file
          echo ">>> Write $GITHUB_WORKSPACE/${{ github.event.inputs.recipe }}.tar.bz2.sha256"
          printf '${{ github.event.inputs.sha256 }}  ${{ github.event.inputs.recipe }}.tar.bz2' > $GITHUB_WORKSPACE/${{ github.event.inputs.recipe }}.tar.bz2.sha256
          # download tarball
          echo ">>> Download ${{ github.event.inputs.recipe }}.tar.bz2"
          curl --location \
               --header "PRIVATE-TOKEN: $GITLAB_PAT" \
               "${{ github.event.inputs.url }}" \
               --output ${{ github.event.inputs.recipe }}.tar.bz2
          # verify checksum
          echo ">>> Verify SHA256 checksum"
          sha256sum --strict --check ${{ github.event.inputs.recipe }}.tar.bz2.sha256
          # untar
          echo ">>> Untar archive"
          tar xf ${{ github.event.inputs.recipe }}.tar.bz2

      - name: Write patch to conda-recipes/${{ github.event.inputs.recipe }}/patches
        run: |
          echo ">>> Create folder for patches"
          mkdir -p $GITHUB_WORKSPACE/conda-recipes/${{ github.event.inputs.recipe }}/patches
          echo ">>> Write patch to $GITHUB_WORKSPACE/conda-recipes/${{ github.event.inputs.recipe }}/patches/version.patch"
          printf '${{ github.event.inputs.patch }}' > $GITHUB_WORKSPACE/conda-recipes/${{ github.event.inputs.recipe }}/patches/version.patch
          echo ">>> Show generated patch"
          cat $GITHUB_WORKSPACE/conda-recipes/${{ github.event.inputs.recipe }}/patches/version.patch

      - name: Install macOS SDK
        if: contains(matrix.os, 'macos')
        working-directory: /Users/runner
        run: |
          curl -fsSL https://github.com/phracker/MacOSX-SDKs/releases/download/10.15/MacOSX10.9.sdk.tar.xz > ~/MacOSX10.9.sdk.tar.xz
          tar -xzf ~/MacOSX10.9.sdk.tar.xz
          rm ~/MacOSX10.9.sdk.tar.xz

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          auto-activate-base: false
          activate-environment: deploy
          environment-file: .github/deploy.yml
          python-version: ${{ matrix.python }}
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true

      - name: Configure meta.yaml.in
        run: |
          python $GITHUB_WORKSPACE/.github/search-replace.py \
                 --replace \
                 "@_version_@=${{ github.event.inputs.version }}" \
                 "@_build_@=${{ github.event.inputs.build }}" \
                --file \
                $GITHUB_WORKSPACE/conda-recipes/${{ github.event.inputs.recipe }}/meta.yaml

      - name: Build and upload ${{ github.event.inputs.recipe }} for triplet ${{ matrix.os }}, Python ${{ matrix.python }}, and ${{ matrix.mpi }}
        if: contains(matrix.os, 'ubuntu') || contains(matrix.os, 'macos')
        env:
          ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: |
          cd $GITHUB_WORKSPACE/conda-recipes
          conda build \
                --variants "{'python': ['${{ matrix.python }}'], 'mpi': ['${{ matrix.mpi }}']}" \
                --token $ANACONDA_TOKEN \
                --user ${{ github.event.inputs.channel }} \
                --label ${{ github.event.inputs.label }} \
                --verify \
                -c conda-forge \
                ${{ github.event.inputs.recipe }}

      - name: Build and upload ${{ github.event.inputs.recipe }} for triplet windows-latest, Python ${{ matrix.python }}, and msmpi
        if: contains(matrix.os, 'windows')
        env:
          ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: |
          cd $GITHUB_WORKSPACE/conda-recipes
          conda build \
                --variants "{'python': ['${{ matrix.python }}']}" \
                --token $ANACONDA_TOKEN \
                --user ${{ github.event.inputs.channel }} \
                --label ${{ github.event.inputs.label }} \
                --verify \
                -c conda-forge \
                ${{ github.event.inputs.recipe }}

      - name: Clean up source code
        run: |
          rm ${{ github.event.inputs.recipe }}.tar.bz2
          rm ${{ github.event.inputs.recipe }}.tar.bz2.sha256
          rm -rf ${{ github.event.inputs.recipe }}

      - name: Send notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSWORD}}
          subject: Successful Conda deployment for ${{ matrix.os }}, Python ${{ matrix.python }}, and ${{ matrix.mpi }}
          to: roberto.di.remigio@it.uu.se,panor@kth.se,rinkevic@kth.se
          from: MinazoBot
          body: |
            Greetings!
            I successfully deployed a Conda package with the following build parameters 
              > Recipe for package: ${{ github.event.inputs.recipe }}
              > Conda package version: ${{ github.event.inputs.version }}
              > Conda package channel: ${{ github.event.inputs.channel }}
              > Conda package label: ${{ github.event.inputs.label }}
              > OS, Python version, MPI implementation: ${{ matrix.os }}, ${{ matrix.python }}, ${{ matrix.mpi }}
            Best regards,
              MinazoBot
