name: Publish Docker image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: "Changed Docker Recipes"

    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write

    outputs:
      changed_files: ${{ steps.combine.outputs.changed_files }}

    steps:
      - id: files
        uses: Ana06/get-changed-files@v2.1.0
        with:
          format: 'json'
          filter: |
            docker/*/*

      - id: combine
        run: |
          echo '${{ steps.files.outputs.added_modified }}' | tee added_modified.json
          echo '${{ steps.files.outputs.renamed }}' | tee renamed.json
          changes="$(cat added_modified.json renamed.json | jq -r -s 'add | unique | sort')"
          echo "Added, modified, renamed files: $changes"
          echo ::set-output name=changed_files::$(echo $changes | jq -c .)

  build-test-containers:
    name: "Build Docker containers"

    needs:
      - changes

    runs-on: ubuntu-latest

    strategy:
      # Keep going on other deployments if anything bloops
      fail-fast: false
      matrix:
        image:
          - 'vlx-ci_ubuntu-22.04'
          - 'vlx-ci_intel'
          - 'vlx-ci_gnu'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Continue if any Docker recipe was changed
        run: |
          sudo apt-get install -y jq
          echo "Added, modified, removed files:"
          echo '${{ needs.changes.outputs.changed_files }}' | tee changed_files.json
          changed="$(cat changed_files.json | jq 'any(.[]; test("${{ matrix.image }}"; "x"))')"
          if [[ "$changed" == "true" ]]; then
             echo "Container to build: ${{ matrix.image }}"
             echo "keepgoing=true" >> $GITHUB_ENV
          else
             echo "Nothing to build!"
          fi

      - name: Docker meta
        if: ${{ env.keepgoing == 'true' }}
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository }}/${{ matrix.image }}
          flavor: |
            latest=true
          tags: |
            type=sha

      - name: Set up Docker Buildx
        if: ${{ env.keepgoing == 'true' }}
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        if: ${{ env.keepgoing == 'true' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        if: ${{ env.keepgoing == 'true' }}
        uses: docker/build-push-action@v4
        with:
          context: docker/${{ matrix.image }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
